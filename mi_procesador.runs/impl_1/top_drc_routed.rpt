Copyright 1986-2022 Xilinx, Inc. All Rights Reserved. Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
---------------------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2024.2 (win64) Build 5239630 Fri Nov 08 22:35:27 MST 2024
| Date         : Sat Jul 12 18:22:07 2025
| Host         : machine running 64-bit major release  (build 9200)
| Command      : report_drc -file top_drc_routed.rpt -pb top_drc_routed.pb -rpx top_drc_routed.rpx
| Design       : top
| Device       : xc7a12ticsg325-1L
| Speed File   : -1L
| Design State : Fully Routed
---------------------------------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max checks: <unlimited>
             Checks found: 84
+----------+------------------+----------------------------+--------+
| Rule     | Severity         | Description                | Checks |
+----------+------------------+----------------------------+--------+
| NSTD-1   | Critical Warning | Unspecified I/O Standard   | 1      |
| UCIO-1   | Critical Warning | Unconstrained Logical Port | 1      |
| DPIP-1   | Warning          | Input pipelining           | 18     |
| DPOP-1   | Warning          | PREG Output pipelining     | 8      |
| DPOP-2   | Warning          | MREG Output pipelining     | 8      |
| DPOR-1   | Warning          | Asynchronous load check    | 16     |
| PDRC-132 | Warning          | SLICE_PairEqSame_A6A5_WARN | 18     |
| PDRC-138 | Warning          | SLICE_PairEqSame_D6D5_WARN | 1      |
| PDRC-140 | Warning          | SLICE_PairEqSame_A6A5_WARN | 13     |
+----------+------------------+----------------------------+--------+

2. REPORT DETAILS
-----------------
NSTD-1#1 Critical Warning
Unspecified I/O Standard  
65 out of 67 logical ports use I/O standard (IOSTANDARD) value 'DEFAULT', instead of a user assigned specific value. This may cause I/O contention or incompatibility with the board power or connectivity affecting performance, signal integrity or in extreme cases cause damage to the device or the components to which it is connected. To correct this violation, specify all I/O standards. This design will fail to generate a bitstream unless all logical ports have a user specified I/O standard value defined. To allow bitstream creation with unspecified I/O standard values (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks NSTD-1].  NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run. Problem ports: Adr[31:0], MemWrite, WriteData[31:0].
Related violations: <none>

UCIO-1#1 Critical Warning
Unconstrained Logical Port  
67 out of 67 logical ports have no user assigned specific location constraint (LOC). This may cause I/O contention or incompatibility with the board power or connectivity affecting performance, signal integrity or in extreme cases cause damage to the device or the components to which it is connected. To correct this violation, specify all pin locations. This design will fail to generate a bitstream unless all logical ports have a user specified site LOC constraint defined.  To allow bitstream creation with unspecified pin locations (not recommended), use this command: set_property SEVERITY {Warning} [get_drc_checks UCIO-1].  NOTE: When using the Vivado Runs infrastructure (e.g. launch_runs Tcl command), add this command to a .tcl file and add that file as a pre-hook for write_bitstream step for the implementation run.  Problem ports: Adr[31:0], MemWrite, WriteData[31:0], clk, reset.
Related violations: <none>

DPIP-1#1 Warning
Input pipelining  
DSP arm/dp/mi_alu/Result0 input arm/dp/mi_alu/Result0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#2 Warning
Input pipelining  
DSP arm/dp/mi_alu/Result0 input arm/dp/mi_alu/Result0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#3 Warning
Input pipelining  
DSP arm/dp/mi_alu/Result0__0 input arm/dp/mi_alu/Result0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#4 Warning
Input pipelining  
DSP arm/dp/mi_alu/Result0__0 input arm/dp/mi_alu/Result0__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#5 Warning
Input pipelining  
DSP arm/dp/mi_alu/Result0__1 input arm/dp/mi_alu/Result0__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#6 Warning
Input pipelining  
DSP arm/dp/mi_alu/Result0__1 input arm/dp/mi_alu/Result0__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#7 Warning
Input pipelining  
DSP arm/dp/mi_fp_alu/fp_multiplier/exp_result1 input arm/dp/mi_fp_alu/fp_multiplier/exp_result1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#8 Warning
Input pipelining  
DSP arm/dp/mi_fp_alu/fp_multiplier/exp_result1 input arm/dp/mi_fp_alu/fp_multiplier/exp_result1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#9 Warning
Input pipelining  
DSP arm/dp/mi_fp_alu/fp_multiplier/exp_result1__0 input arm/dp/mi_fp_alu/fp_multiplier/exp_result1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#10 Warning
Input pipelining  
DSP arm/dp/mi_fp_alu/fp_multiplier/exp_result1__0 input arm/dp/mi_fp_alu/fp_multiplier/exp_result1__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#11 Warning
Input pipelining  
DSP arm/p_1_out input arm/p_1_out/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#12 Warning
Input pipelining  
DSP arm/p_1_out input arm/p_1_out/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#13 Warning
Input pipelining  
DSP arm/p_1_out__0 input arm/p_1_out__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#14 Warning
Input pipelining  
DSP arm/p_1_out__0 input arm/p_1_out__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#15 Warning
Input pipelining  
DSP arm/p_1_out__1 input arm/p_1_out__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#16 Warning
Input pipelining  
DSP arm/p_1_out__1 input arm/p_1_out__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#17 Warning
Input pipelining  
DSP arm/p_1_out__2 input arm/p_1_out__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#18 Warning
Input pipelining  
DSP arm/p_1_out__2 input arm/p_1_out__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-1#1 Warning
PREG Output pipelining  
DSP arm/dp/mi_alu/Result0 output arm/dp/mi_alu/Result0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#2 Warning
PREG Output pipelining  
DSP arm/dp/mi_alu/Result0__0 output arm/dp/mi_alu/Result0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#3 Warning
PREG Output pipelining  
DSP arm/dp/mi_alu/Result0__1 output arm/dp/mi_alu/Result0__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#4 Warning
PREG Output pipelining  
DSP arm/dp/mi_fp_alu/fp_multiplier/exp_result1__0 output arm/dp/mi_fp_alu/fp_multiplier/exp_result1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#5 Warning
PREG Output pipelining  
DSP arm/p_1_out output arm/p_1_out/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#6 Warning
PREG Output pipelining  
DSP arm/p_1_out__0 output arm/p_1_out__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#7 Warning
PREG Output pipelining  
DSP arm/p_1_out__1 output arm/p_1_out__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#8 Warning
PREG Output pipelining  
DSP arm/p_1_out__2 output arm/p_1_out__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-2#1 Warning
MREG Output pipelining  
DSP arm/dp/mi_alu/Result0 multiplier stage arm/dp/mi_alu/Result0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#2 Warning
MREG Output pipelining  
DSP arm/dp/mi_alu/Result0__0 multiplier stage arm/dp/mi_alu/Result0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#3 Warning
MREG Output pipelining  
DSP arm/dp/mi_alu/Result0__1 multiplier stage arm/dp/mi_alu/Result0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#4 Warning
MREG Output pipelining  
DSP arm/dp/mi_fp_alu/fp_multiplier/exp_result1__0 multiplier stage arm/dp/mi_fp_alu/fp_multiplier/exp_result1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#5 Warning
MREG Output pipelining  
DSP arm/p_1_out multiplier stage arm/p_1_out/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#6 Warning
MREG Output pipelining  
DSP arm/p_1_out__0 multiplier stage arm/p_1_out__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#7 Warning
MREG Output pipelining  
DSP arm/p_1_out__1 multiplier stage arm/p_1_out__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#8 Warning
MREG Output pipelining  
DSP arm/p_1_out__2 multiplier stage arm/p_1_out__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOR-1#1 Warning
Asynchronous load check  
DSP arm/p_1_out__1 output is connected to registers with an asynchronous reset (arm/dp/mi_ff_mult_lo/q_reg[0]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPOR-1#2 Warning
Asynchronous load check  
DSP arm/p_1_out__1 output is connected to registers with an asynchronous reset (arm/dp/mi_ff_mult_lo/q_reg[10]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPOR-1#3 Warning
Asynchronous load check  
DSP arm/p_1_out__1 output is connected to registers with an asynchronous reset (arm/dp/mi_ff_mult_lo/q_reg[11]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPOR-1#4 Warning
Asynchronous load check  
DSP arm/p_1_out__1 output is connected to registers with an asynchronous reset (arm/dp/mi_ff_mult_lo/q_reg[12]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPOR-1#5 Warning
Asynchronous load check  
DSP arm/p_1_out__1 output is connected to registers with an asynchronous reset (arm/dp/mi_ff_mult_lo/q_reg[13]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPOR-1#6 Warning
Asynchronous load check  
DSP arm/p_1_out__1 output is connected to registers with an asynchronous reset (arm/dp/mi_ff_mult_lo/q_reg[14]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPOR-1#7 Warning
Asynchronous load check  
DSP arm/p_1_out__1 output is connected to registers with an asynchronous reset (arm/dp/mi_ff_mult_lo/q_reg[15]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPOR-1#8 Warning
Asynchronous load check  
DSP arm/p_1_out__1 output is connected to registers with an asynchronous reset (arm/dp/mi_ff_mult_lo/q_reg[1]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPOR-1#9 Warning
Asynchronous load check  
DSP arm/p_1_out__1 output is connected to registers with an asynchronous reset (arm/dp/mi_ff_mult_lo/q_reg[2]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPOR-1#10 Warning
Asynchronous load check  
DSP arm/p_1_out__1 output is connected to registers with an asynchronous reset (arm/dp/mi_ff_mult_lo/q_reg[3]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPOR-1#11 Warning
Asynchronous load check  
DSP arm/p_1_out__1 output is connected to registers with an asynchronous reset (arm/dp/mi_ff_mult_lo/q_reg[4]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPOR-1#12 Warning
Asynchronous load check  
DSP arm/p_1_out__1 output is connected to registers with an asynchronous reset (arm/dp/mi_ff_mult_lo/q_reg[5]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPOR-1#13 Warning
Asynchronous load check  
DSP arm/p_1_out__1 output is connected to registers with an asynchronous reset (arm/dp/mi_ff_mult_lo/q_reg[6]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPOR-1#14 Warning
Asynchronous load check  
DSP arm/p_1_out__1 output is connected to registers with an asynchronous reset (arm/dp/mi_ff_mult_lo/q_reg[7]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPOR-1#15 Warning
Asynchronous load check  
DSP arm/p_1_out__1 output is connected to registers with an asynchronous reset (arm/dp/mi_ff_mult_lo/q_reg[8]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

DPOR-1#16 Warning
Asynchronous load check  
DSP arm/p_1_out__1 output is connected to registers with an asynchronous reset (arm/dp/mi_ff_mult_lo/q_reg[9]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
Related violations: <none>

PDRC-132#1 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X11Y20 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-132#2 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X11Y9 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-132#3 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X13Y14 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-132#4 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X13Y3 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-132#5 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X15Y11 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-132#6 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X16Y10 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-132#7 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X17Y0 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-132#8 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X17Y11 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-132#9 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X19Y6 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-132#10 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X20Y4 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-132#11 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X21Y4 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-132#12 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X7Y27 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-132#13 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X7Y36 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-132#14 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X9Y18 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-132#15 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X9Y35 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-132#16 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X9Y46 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-132#17 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X9Y59 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-132#18 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X9Y9 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-138#1 Warning
SLICE_PairEqSame_D6D5_WARN  
Luts D6LUT and D5LUT in use in site SLICE_X17Y8 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-140#1 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X10Y18 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-140#2 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X10Y50 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-140#3 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X10Y59 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-140#4 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X10Y9 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-140#5 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X14Y7 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-140#6 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X18Y7 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-140#7 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X6Y25 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-140#8 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X6Y39 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-140#9 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X8Y14 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-140#10 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X8Y23 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-140#11 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X8Y32 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-140#12 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X8Y43 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>

PDRC-140#13 Warning
SLICE_PairEqSame_A6A5_WARN  
Luts A6LUT and A5LUT in use in site SLICE_X8Y56 with different equations without A6 pin connected to Global Logic High.
Related violations: <none>


